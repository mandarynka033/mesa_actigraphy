"0","   gamma_stats <- m$mle$stepPar %>% round(digits = 2)"
"0","    # Probability of going between states"
"0","    prob_matrix <- m$mle$gamma %>% round(digits = 3)"
"0","    "
"0","    # Obtain states"
"0","    states <- viterbi(m)"
"0","    # Join states with main dataframe"
"0","    df_states <- cbind(df2, states)"
"0","    "
"0","    # Order states by average activity"
"0","    df_order <- df_states %>% group_by(states) %>% "
"0","        summarise(mean_state = mean(.data[[""act5_mean""]]), "
"0","                  .groups = ""drop"") %>% "
"0","        arrange(mean_state) %>% "
"0","        mutate(state_order = row_number())"
"0",""
"0","    # Add ordered states to dataframe"
"0","    df_ord <- df_order %>% select(states, state_order) %>% "
"0","        right_join(df_states, by = ""states"") %>% "
"0","        select(-states) %>% arrange(dt5)"
"0",""
"0","    # Obtaining probabilities for each state"
"0","    probs_states <- stateProbs(m)"
"0","    "
"0","    # Obtain raw rest states"
"0","    rest_states_raw <- df_order %>% filter(mean_state < sleep_limit) %>% "
"0","        select(states) %>% unlist(use.names = FALSE)"
"0","    "
"0","    # Subset probabilities for rest states"
"0","    df_probs <- tibble("
"0","        asleep = rowSums(probs_states[, rest_states_raw, drop = FALSE])"
"0","        # Join with averaged dataset"
"0","        ) %>% cbind(df2) %>% "
"0","        # Join with big dataset to add hour"
"0","         left_join(select(df, dt5, hr), by = ""dt5"")  %>%"
"0","        mutate(new_date = if_else(hr >= 12, ""1960-01-01"", ""1960-01-02""))"
"0","    "
"0","    # Change date so that middle is at midday"
"0","    date(df_probs$dt5) = ymd(df_probs$new_date)"
"0",""
"0","    # Calculate mean probability for 5 minute intervals"
"0","    df_prob <- df_probs %>% group_by(dt5) %>%"
"0","          summarise(mean_prob = mean(asleep), .groups = ""drop"") %>% "
"0","        mutate(tm = as.numeric(hms(format(dt5, format = ""%H:%M:%S"")))/3600)"
"0","    diff_vctr <- rep(diff(df_prob$tm)[1], 287)"
"0","    sleep_amount <- sum(diff_vctr * (head(df_prob$mean_prob,-1) +"
"0","                                         tail(df_prob$mean_prob,-1)))/2"
"0",""
"0","    # Plot probability of rest"
"0","    print(df_prob %>% ggplot(aes(x = dt5, y = mean_prob)) +"
"0","              geom_line() +"
"0","              geom_smooth(method = ""gam"", se = FALSE) +"
"0","              scale_x_datetime(date_labels = ""%H:%M"") +"
"0","              labs(title = ""Probability of sleep"", x = ""Time"","
"0","                   y = ""Mean probability""))"
